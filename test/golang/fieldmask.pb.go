// Copyright Â© 2022 The Things Industries B.V.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: fieldmask.proto

package test

import (
	_ "github.com/TheThingsIndustries/protoc-gen-go-json/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageWithFieldMask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageWithFieldMask) Reset() {
	*x = MessageWithFieldMask{}
	mi := &file_fieldmask_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithFieldMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithFieldMask) ProtoMessage() {}

func (x *MessageWithFieldMask) ProtoReflect() protoreflect.Message {
	mi := &file_fieldmask_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithFieldMask.ProtoReflect.Descriptor instead.
func (*MessageWithFieldMask) Descriptor() ([]byte, []int) {
	return file_fieldmask_proto_rawDescGZIP(), []int{0}
}

func (x *MessageWithFieldMask) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *MessageWithFieldMask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MessageWithoutFieldMask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageWithoutFieldMask) Reset() {
	*x = MessageWithoutFieldMask{}
	mi := &file_fieldmask_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithoutFieldMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithoutFieldMask) ProtoMessage() {}

func (x *MessageWithoutFieldMask) ProtoReflect() protoreflect.Message {
	mi := &file_fieldmask_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithoutFieldMask.ProtoReflect.Descriptor instead.
func (*MessageWithoutFieldMask) Descriptor() ([]byte, []int) {
	return file_fieldmask_proto_rawDescGZIP(), []int{1}
}

func (x *MessageWithoutFieldMask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MessageWithSubmessageWithFieldmask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submessage    *MessageWithFieldMask  `protobuf:"bytes,1,opt,name=submessage,proto3" json:"submessage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageWithSubmessageWithFieldmask) Reset() {
	*x = MessageWithSubmessageWithFieldmask{}
	mi := &file_fieldmask_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithSubmessageWithFieldmask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithSubmessageWithFieldmask) ProtoMessage() {}

func (x *MessageWithSubmessageWithFieldmask) ProtoReflect() protoreflect.Message {
	mi := &file_fieldmask_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithSubmessageWithFieldmask.ProtoReflect.Descriptor instead.
func (*MessageWithSubmessageWithFieldmask) Descriptor() ([]byte, []int) {
	return file_fieldmask_proto_rawDescGZIP(), []int{2}
}

func (x *MessageWithSubmessageWithFieldmask) GetSubmessage() *MessageWithFieldMask {
	if x != nil {
		return x.Submessage
	}
	return nil
}

type MessageWithSubmessageWithoutFieldmask struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Submessage    *MessageWithoutFieldMask `protobuf:"bytes,1,opt,name=submessage,proto3" json:"submessage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageWithSubmessageWithoutFieldmask) Reset() {
	*x = MessageWithSubmessageWithoutFieldmask{}
	mi := &file_fieldmask_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithSubmessageWithoutFieldmask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithSubmessageWithoutFieldmask) ProtoMessage() {}

func (x *MessageWithSubmessageWithoutFieldmask) ProtoReflect() protoreflect.Message {
	mi := &file_fieldmask_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithSubmessageWithoutFieldmask.ProtoReflect.Descriptor instead.
func (*MessageWithSubmessageWithoutFieldmask) Descriptor() ([]byte, []int) {
	return file_fieldmask_proto_rawDescGZIP(), []int{3}
}

func (x *MessageWithSubmessageWithoutFieldmask) GetSubmessage() *MessageWithoutFieldMask {
	if x != nil {
		return x.Submessage
	}
	return nil
}

type MessageWithFieldmaskAndSubmessageWithFieldmask struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	FieldMask     *fieldmaskpb.FieldMask   `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	Submessage    *MessageWithoutFieldMask `protobuf:"bytes,2,opt,name=submessage,proto3" json:"submessage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageWithFieldmaskAndSubmessageWithFieldmask) Reset() {
	*x = MessageWithFieldmaskAndSubmessageWithFieldmask{}
	mi := &file_fieldmask_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithFieldmaskAndSubmessageWithFieldmask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithFieldmaskAndSubmessageWithFieldmask) ProtoMessage() {}

func (x *MessageWithFieldmaskAndSubmessageWithFieldmask) ProtoReflect() protoreflect.Message {
	mi := &file_fieldmask_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithFieldmaskAndSubmessageWithFieldmask.ProtoReflect.Descriptor instead.
func (*MessageWithFieldmaskAndSubmessageWithFieldmask) Descriptor() ([]byte, []int) {
	return file_fieldmask_proto_rawDescGZIP(), []int{4}
}

func (x *MessageWithFieldmaskAndSubmessageWithFieldmask) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *MessageWithFieldmaskAndSubmessageWithFieldmask) GetSubmessage() *MessageWithoutFieldMask {
	if x != nil {
		return x.Submessage
	}
	return nil
}

type MessageWithFieldmaskAndSubmessageWithoutFieldmask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	Submessage    *MessageWithFieldMask  `protobuf:"bytes,2,opt,name=submessage,proto3" json:"submessage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageWithFieldmaskAndSubmessageWithoutFieldmask) Reset() {
	*x = MessageWithFieldmaskAndSubmessageWithoutFieldmask{}
	mi := &file_fieldmask_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithFieldmaskAndSubmessageWithoutFieldmask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithFieldmaskAndSubmessageWithoutFieldmask) ProtoMessage() {}

func (x *MessageWithFieldmaskAndSubmessageWithoutFieldmask) ProtoReflect() protoreflect.Message {
	mi := &file_fieldmask_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithFieldmaskAndSubmessageWithoutFieldmask.ProtoReflect.Descriptor instead.
func (*MessageWithFieldmaskAndSubmessageWithoutFieldmask) Descriptor() ([]byte, []int) {
	return file_fieldmask_proto_rawDescGZIP(), []int{5}
}

func (x *MessageWithFieldmaskAndSubmessageWithoutFieldmask) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *MessageWithFieldmaskAndSubmessageWithoutFieldmask) GetSubmessage() *MessageWithFieldMask {
	if x != nil {
		return x.Submessage
	}
	return nil
}

type MessageWithSubmessageWithFieldmaskAndMarshaler struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submessage    *MessageWithFieldMask  `protobuf:"bytes,1,opt,name=submessage,proto3" json:"submessage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageWithSubmessageWithFieldmaskAndMarshaler) Reset() {
	*x = MessageWithSubmessageWithFieldmaskAndMarshaler{}
	mi := &file_fieldmask_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithSubmessageWithFieldmaskAndMarshaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithSubmessageWithFieldmaskAndMarshaler) ProtoMessage() {}

func (x *MessageWithSubmessageWithFieldmaskAndMarshaler) ProtoReflect() protoreflect.Message {
	mi := &file_fieldmask_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithSubmessageWithFieldmaskAndMarshaler.ProtoReflect.Descriptor instead.
func (*MessageWithSubmessageWithFieldmaskAndMarshaler) Descriptor() ([]byte, []int) {
	return file_fieldmask_proto_rawDescGZIP(), []int{6}
}

func (x *MessageWithSubmessageWithFieldmaskAndMarshaler) GetSubmessage() *MessageWithFieldMask {
	if x != nil {
		return x.Submessage
	}
	return nil
}

var File_fieldmask_proto protoreflect.FileDescriptor

const file_fieldmask_proto_rawDesc = "" +
	"\n" +
	"\x0ffieldmask.proto\x12\x13thethings.json.test\x1a google/protobuf/field_mask.proto\x1a thethings/json/annotations.proto\"e\n" +
	"\x14MessageWithFieldMask\x129\n" +
	"\n" +
	"field_mask\x18\x01 \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"-\n" +
	"\x17MessageWithoutFieldMask\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"o\n" +
	"\"MessageWithSubmessageWithFieldmask\x12I\n" +
	"\n" +
	"submessage\x18\x01 \x01(\v2).thethings.json.test.MessageWithFieldMaskR\n" +
	"submessage\"u\n" +
	"%MessageWithSubmessageWithoutFieldmask\x12L\n" +
	"\n" +
	"submessage\x18\x01 \x01(\v2,.thethings.json.test.MessageWithoutFieldMaskR\n" +
	"submessage\"\xb9\x01\n" +
	".MessageWithFieldmaskAndSubmessageWithFieldmask\x129\n" +
	"\n" +
	"field_mask\x18\x01 \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\x12L\n" +
	"\n" +
	"submessage\x18\x02 \x01(\v2,.thethings.json.test.MessageWithoutFieldMaskR\n" +
	"submessage\"\xb9\x01\n" +
	"1MessageWithFieldmaskAndSubmessageWithoutFieldmask\x129\n" +
	"\n" +
	"field_mask\x18\x01 \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\x12I\n" +
	"\n" +
	"submessage\x18\x02 \x01(\v2).thethings.json.test.MessageWithFieldMaskR\n" +
	"submessage\"\x83\x01\n" +
	".MessageWithSubmessageWithFieldmaskAndMarshaler\x12I\n" +
	"\n" +
	"submessage\x18\x01 \x01(\v2).thethings.json.test.MessageWithFieldMaskR\n" +
	"submessage:\x06\xea\xaa\x19\x02\b\x01B8Z6github.com/TheThingsIndustries/protoc-gen-go-json/testb\x06proto3"

var (
	file_fieldmask_proto_rawDescOnce sync.Once
	file_fieldmask_proto_rawDescData []byte
)

func file_fieldmask_proto_rawDescGZIP() []byte {
	file_fieldmask_proto_rawDescOnce.Do(func() {
		file_fieldmask_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fieldmask_proto_rawDesc), len(file_fieldmask_proto_rawDesc)))
	})
	return file_fieldmask_proto_rawDescData
}

var file_fieldmask_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_fieldmask_proto_goTypes = []any{
	(*MessageWithFieldMask)(nil),                              // 0: thethings.json.test.MessageWithFieldMask
	(*MessageWithoutFieldMask)(nil),                           // 1: thethings.json.test.MessageWithoutFieldMask
	(*MessageWithSubmessageWithFieldmask)(nil),                // 2: thethings.json.test.MessageWithSubmessageWithFieldmask
	(*MessageWithSubmessageWithoutFieldmask)(nil),             // 3: thethings.json.test.MessageWithSubmessageWithoutFieldmask
	(*MessageWithFieldmaskAndSubmessageWithFieldmask)(nil),    // 4: thethings.json.test.MessageWithFieldmaskAndSubmessageWithFieldmask
	(*MessageWithFieldmaskAndSubmessageWithoutFieldmask)(nil), // 5: thethings.json.test.MessageWithFieldmaskAndSubmessageWithoutFieldmask
	(*MessageWithSubmessageWithFieldmaskAndMarshaler)(nil),    // 6: thethings.json.test.MessageWithSubmessageWithFieldmaskAndMarshaler
	(*fieldmaskpb.FieldMask)(nil),                             // 7: google.protobuf.FieldMask
}
var file_fieldmask_proto_depIdxs = []int32{
	7, // 0: thethings.json.test.MessageWithFieldMask.field_mask:type_name -> google.protobuf.FieldMask
	0, // 1: thethings.json.test.MessageWithSubmessageWithFieldmask.submessage:type_name -> thethings.json.test.MessageWithFieldMask
	1, // 2: thethings.json.test.MessageWithSubmessageWithoutFieldmask.submessage:type_name -> thethings.json.test.MessageWithoutFieldMask
	7, // 3: thethings.json.test.MessageWithFieldmaskAndSubmessageWithFieldmask.field_mask:type_name -> google.protobuf.FieldMask
	1, // 4: thethings.json.test.MessageWithFieldmaskAndSubmessageWithFieldmask.submessage:type_name -> thethings.json.test.MessageWithoutFieldMask
	7, // 5: thethings.json.test.MessageWithFieldmaskAndSubmessageWithoutFieldmask.field_mask:type_name -> google.protobuf.FieldMask
	0, // 6: thethings.json.test.MessageWithFieldmaskAndSubmessageWithoutFieldmask.submessage:type_name -> thethings.json.test.MessageWithFieldMask
	0, // 7: thethings.json.test.MessageWithSubmessageWithFieldmaskAndMarshaler.submessage:type_name -> thethings.json.test.MessageWithFieldMask
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_fieldmask_proto_init() }
func file_fieldmask_proto_init() {
	if File_fieldmask_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fieldmask_proto_rawDesc), len(file_fieldmask_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fieldmask_proto_goTypes,
		DependencyIndexes: file_fieldmask_proto_depIdxs,
		MessageInfos:      file_fieldmask_proto_msgTypes,
	}.Build()
	File_fieldmask_proto = out.File
	file_fieldmask_proto_goTypes = nil
	file_fieldmask_proto_depIdxs = nil
}
