// Copyright Â© 2021 The Things Industries B.V.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: scalars.proto

package test

import (
	_ "github.com/TheThingsIndustries/protoc-gen-go-json/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageWithScalars struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DoubleValue    float64                `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	DoubleValues   []float64              `protobuf:"fixed64,2,rep,packed,name=double_values,json=doubleValues,proto3" json:"double_values,omitempty"`
	FloatValue     float32                `protobuf:"fixed32,3,opt,name=float_value,json=floatValue,proto3" json:"float_value,omitempty"`
	FloatValues    []float32              `protobuf:"fixed32,4,rep,packed,name=float_values,json=floatValues,proto3" json:"float_values,omitempty"`
	Int32Value     int32                  `protobuf:"varint,5,opt,name=int32_value,json=int32Value,proto3" json:"int32_value,omitempty"`
	Int32Values    []int32                `protobuf:"varint,6,rep,packed,name=int32_values,json=int32Values,proto3" json:"int32_values,omitempty"`
	Int64Value     int64                  `protobuf:"varint,7,opt,name=int64_value,json=int64Value,proto3" json:"int64_value,omitempty"`
	Int64Values    []int64                `protobuf:"varint,8,rep,packed,name=int64_values,json=int64Values,proto3" json:"int64_values,omitempty"`
	Uint32Value    uint32                 `protobuf:"varint,9,opt,name=uint32_value,json=uint32Value,proto3" json:"uint32_value,omitempty"`
	Uint32Values   []uint32               `protobuf:"varint,10,rep,packed,name=uint32_values,json=uint32Values,proto3" json:"uint32_values,omitempty"`
	Uint64Value    uint64                 `protobuf:"varint,11,opt,name=uint64_value,json=uint64Value,proto3" json:"uint64_value,omitempty"`
	Uint64Values   []uint64               `protobuf:"varint,12,rep,packed,name=uint64_values,json=uint64Values,proto3" json:"uint64_values,omitempty"`
	Sint32Value    int32                  `protobuf:"zigzag32,13,opt,name=sint32_value,json=sint32Value,proto3" json:"sint32_value,omitempty"`
	Sint32Values   []int32                `protobuf:"zigzag32,14,rep,packed,name=sint32_values,json=sint32Values,proto3" json:"sint32_values,omitempty"`
	Sint64Value    int64                  `protobuf:"zigzag64,15,opt,name=sint64_value,json=sint64Value,proto3" json:"sint64_value,omitempty"`
	Sint64Values   []int64                `protobuf:"zigzag64,16,rep,packed,name=sint64_values,json=sint64Values,proto3" json:"sint64_values,omitempty"`
	Fixed32Value   uint32                 `protobuf:"fixed32,17,opt,name=fixed32_value,json=fixed32Value,proto3" json:"fixed32_value,omitempty"`
	Fixed32Values  []uint32               `protobuf:"fixed32,18,rep,packed,name=fixed32_values,json=fixed32Values,proto3" json:"fixed32_values,omitempty"`
	Fixed64Value   uint64                 `protobuf:"fixed64,19,opt,name=fixed64_value,json=fixed64Value,proto3" json:"fixed64_value,omitempty"`
	Fixed64Values  []uint64               `protobuf:"fixed64,20,rep,packed,name=fixed64_values,json=fixed64Values,proto3" json:"fixed64_values,omitempty"`
	Sfixed32Value  int32                  `protobuf:"fixed32,21,opt,name=sfixed32_value,json=sfixed32Value,proto3" json:"sfixed32_value,omitempty"`
	Sfixed32Values []int32                `protobuf:"fixed32,22,rep,packed,name=sfixed32_values,json=sfixed32Values,proto3" json:"sfixed32_values,omitempty"`
	Sfixed64Value  int64                  `protobuf:"fixed64,23,opt,name=sfixed64_value,json=sfixed64Value,proto3" json:"sfixed64_value,omitempty"`
	Sfixed64Values []int64                `protobuf:"fixed64,24,rep,packed,name=sfixed64_values,json=sfixed64Values,proto3" json:"sfixed64_values,omitempty"`
	BoolValue      bool                   `protobuf:"varint,25,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	BoolValues     []bool                 `protobuf:"varint,26,rep,packed,name=bool_values,json=boolValues,proto3" json:"bool_values,omitempty"`
	StringValue    string                 `protobuf:"bytes,27,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	StringValues   []string               `protobuf:"bytes,28,rep,name=string_values,json=stringValues,proto3" json:"string_values,omitempty"`
	BytesValue     []byte                 `protobuf:"bytes,29,opt,name=bytes_value,json=bytesValue,proto3" json:"bytes_value,omitempty"`
	BytesValues    [][]byte               `protobuf:"bytes,30,rep,name=bytes_values,json=bytesValues,proto3" json:"bytes_values,omitempty"`
	HexBytesValue  []byte                 `protobuf:"bytes,31,opt,name=hex_bytes_value,json=hexBytesValue,proto3" json:"hex_bytes_value,omitempty"`
	HexBytesValues [][]byte               `protobuf:"bytes,32,rep,name=hex_bytes_values,json=hexBytesValues,proto3" json:"hex_bytes_values,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MessageWithScalars) Reset() {
	*x = MessageWithScalars{}
	mi := &file_scalars_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithScalars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithScalars) ProtoMessage() {}

func (x *MessageWithScalars) ProtoReflect() protoreflect.Message {
	mi := &file_scalars_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithScalars.ProtoReflect.Descriptor instead.
func (*MessageWithScalars) Descriptor() ([]byte, []int) {
	return file_scalars_proto_rawDescGZIP(), []int{0}
}

func (x *MessageWithScalars) GetDoubleValue() float64 {
	if x != nil {
		return x.DoubleValue
	}
	return 0
}

func (x *MessageWithScalars) GetDoubleValues() []float64 {
	if x != nil {
		return x.DoubleValues
	}
	return nil
}

func (x *MessageWithScalars) GetFloatValue() float32 {
	if x != nil {
		return x.FloatValue
	}
	return 0
}

func (x *MessageWithScalars) GetFloatValues() []float32 {
	if x != nil {
		return x.FloatValues
	}
	return nil
}

func (x *MessageWithScalars) GetInt32Value() int32 {
	if x != nil {
		return x.Int32Value
	}
	return 0
}

func (x *MessageWithScalars) GetInt32Values() []int32 {
	if x != nil {
		return x.Int32Values
	}
	return nil
}

func (x *MessageWithScalars) GetInt64Value() int64 {
	if x != nil {
		return x.Int64Value
	}
	return 0
}

func (x *MessageWithScalars) GetInt64Values() []int64 {
	if x != nil {
		return x.Int64Values
	}
	return nil
}

func (x *MessageWithScalars) GetUint32Value() uint32 {
	if x != nil {
		return x.Uint32Value
	}
	return 0
}

func (x *MessageWithScalars) GetUint32Values() []uint32 {
	if x != nil {
		return x.Uint32Values
	}
	return nil
}

func (x *MessageWithScalars) GetUint64Value() uint64 {
	if x != nil {
		return x.Uint64Value
	}
	return 0
}

func (x *MessageWithScalars) GetUint64Values() []uint64 {
	if x != nil {
		return x.Uint64Values
	}
	return nil
}

func (x *MessageWithScalars) GetSint32Value() int32 {
	if x != nil {
		return x.Sint32Value
	}
	return 0
}

func (x *MessageWithScalars) GetSint32Values() []int32 {
	if x != nil {
		return x.Sint32Values
	}
	return nil
}

func (x *MessageWithScalars) GetSint64Value() int64 {
	if x != nil {
		return x.Sint64Value
	}
	return 0
}

func (x *MessageWithScalars) GetSint64Values() []int64 {
	if x != nil {
		return x.Sint64Values
	}
	return nil
}

func (x *MessageWithScalars) GetFixed32Value() uint32 {
	if x != nil {
		return x.Fixed32Value
	}
	return 0
}

func (x *MessageWithScalars) GetFixed32Values() []uint32 {
	if x != nil {
		return x.Fixed32Values
	}
	return nil
}

func (x *MessageWithScalars) GetFixed64Value() uint64 {
	if x != nil {
		return x.Fixed64Value
	}
	return 0
}

func (x *MessageWithScalars) GetFixed64Values() []uint64 {
	if x != nil {
		return x.Fixed64Values
	}
	return nil
}

func (x *MessageWithScalars) GetSfixed32Value() int32 {
	if x != nil {
		return x.Sfixed32Value
	}
	return 0
}

func (x *MessageWithScalars) GetSfixed32Values() []int32 {
	if x != nil {
		return x.Sfixed32Values
	}
	return nil
}

func (x *MessageWithScalars) GetSfixed64Value() int64 {
	if x != nil {
		return x.Sfixed64Value
	}
	return 0
}

func (x *MessageWithScalars) GetSfixed64Values() []int64 {
	if x != nil {
		return x.Sfixed64Values
	}
	return nil
}

func (x *MessageWithScalars) GetBoolValue() bool {
	if x != nil {
		return x.BoolValue
	}
	return false
}

func (x *MessageWithScalars) GetBoolValues() []bool {
	if x != nil {
		return x.BoolValues
	}
	return nil
}

func (x *MessageWithScalars) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

func (x *MessageWithScalars) GetStringValues() []string {
	if x != nil {
		return x.StringValues
	}
	return nil
}

func (x *MessageWithScalars) GetBytesValue() []byte {
	if x != nil {
		return x.BytesValue
	}
	return nil
}

func (x *MessageWithScalars) GetBytesValues() [][]byte {
	if x != nil {
		return x.BytesValues
	}
	return nil
}

func (x *MessageWithScalars) GetHexBytesValue() []byte {
	if x != nil {
		return x.HexBytesValue
	}
	return nil
}

func (x *MessageWithScalars) GetHexBytesValues() [][]byte {
	if x != nil {
		return x.HexBytesValues
	}
	return nil
}

type MessageWithOneofScalars struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*MessageWithOneofScalars_DoubleValue
	//	*MessageWithOneofScalars_FloatValue
	//	*MessageWithOneofScalars_Int32Value
	//	*MessageWithOneofScalars_Int64Value
	//	*MessageWithOneofScalars_Uint32Value
	//	*MessageWithOneofScalars_Uint64Value
	//	*MessageWithOneofScalars_Sint32Value
	//	*MessageWithOneofScalars_Sint64Value
	//	*MessageWithOneofScalars_Fixed32Value
	//	*MessageWithOneofScalars_Fixed64Value
	//	*MessageWithOneofScalars_Sfixed32Value
	//	*MessageWithOneofScalars_Sfixed64Value
	//	*MessageWithOneofScalars_BoolValue
	//	*MessageWithOneofScalars_StringValue
	//	*MessageWithOneofScalars_BytesValue
	//	*MessageWithOneofScalars_HexBytesValue
	Value         isMessageWithOneofScalars_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageWithOneofScalars) Reset() {
	*x = MessageWithOneofScalars{}
	mi := &file_scalars_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithOneofScalars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithOneofScalars) ProtoMessage() {}

func (x *MessageWithOneofScalars) ProtoReflect() protoreflect.Message {
	mi := &file_scalars_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithOneofScalars.ProtoReflect.Descriptor instead.
func (*MessageWithOneofScalars) Descriptor() ([]byte, []int) {
	return file_scalars_proto_rawDescGZIP(), []int{1}
}

func (x *MessageWithOneofScalars) GetValue() isMessageWithOneofScalars_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MessageWithOneofScalars) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetInt32Value() int32 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Int32Value); ok {
			return x.Int32Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetInt64Value() int64 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Int64Value); ok {
			return x.Int64Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetUint32Value() uint32 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Uint32Value); ok {
			return x.Uint32Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetUint64Value() uint64 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Uint64Value); ok {
			return x.Uint64Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetSint32Value() int32 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Sint32Value); ok {
			return x.Sint32Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetSint64Value() int64 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Sint64Value); ok {
			return x.Sint64Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetFixed32Value() uint32 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Fixed32Value); ok {
			return x.Fixed32Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetFixed64Value() uint64 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Fixed64Value); ok {
			return x.Fixed64Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetSfixed32Value() int32 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Sfixed32Value); ok {
			return x.Sfixed32Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetSfixed64Value() int64 {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_Sfixed64Value); ok {
			return x.Sfixed64Value
		}
	}
	return 0
}

func (x *MessageWithOneofScalars) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *MessageWithOneofScalars) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *MessageWithOneofScalars) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *MessageWithOneofScalars) GetHexBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*MessageWithOneofScalars_HexBytesValue); ok {
			return x.HexBytesValue
		}
	}
	return nil
}

type isMessageWithOneofScalars_Value interface {
	isMessageWithOneofScalars_Value()
}

type MessageWithOneofScalars_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type MessageWithOneofScalars_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,2,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type MessageWithOneofScalars_Int32Value struct {
	Int32Value int32 `protobuf:"varint,3,opt,name=int32_value,json=int32Value,proto3,oneof"`
}

type MessageWithOneofScalars_Int64Value struct {
	Int64Value int64 `protobuf:"varint,4,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type MessageWithOneofScalars_Uint32Value struct {
	Uint32Value uint32 `protobuf:"varint,5,opt,name=uint32_value,json=uint32Value,proto3,oneof"`
}

type MessageWithOneofScalars_Uint64Value struct {
	Uint64Value uint64 `protobuf:"varint,6,opt,name=uint64_value,json=uint64Value,proto3,oneof"`
}

type MessageWithOneofScalars_Sint32Value struct {
	Sint32Value int32 `protobuf:"zigzag32,7,opt,name=sint32_value,json=sint32Value,proto3,oneof"`
}

type MessageWithOneofScalars_Sint64Value struct {
	Sint64Value int64 `protobuf:"zigzag64,8,opt,name=sint64_value,json=sint64Value,proto3,oneof"`
}

type MessageWithOneofScalars_Fixed32Value struct {
	Fixed32Value uint32 `protobuf:"fixed32,9,opt,name=fixed32_value,json=fixed32Value,proto3,oneof"`
}

type MessageWithOneofScalars_Fixed64Value struct {
	Fixed64Value uint64 `protobuf:"fixed64,10,opt,name=fixed64_value,json=fixed64Value,proto3,oneof"`
}

type MessageWithOneofScalars_Sfixed32Value struct {
	Sfixed32Value int32 `protobuf:"fixed32,11,opt,name=sfixed32_value,json=sfixed32Value,proto3,oneof"`
}

type MessageWithOneofScalars_Sfixed64Value struct {
	Sfixed64Value int64 `protobuf:"fixed64,12,opt,name=sfixed64_value,json=sfixed64Value,proto3,oneof"`
}

type MessageWithOneofScalars_BoolValue struct {
	BoolValue bool `protobuf:"varint,13,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type MessageWithOneofScalars_StringValue struct {
	StringValue string `protobuf:"bytes,14,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type MessageWithOneofScalars_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,15,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type MessageWithOneofScalars_HexBytesValue struct {
	HexBytesValue []byte `protobuf:"bytes,16,opt,name=hex_bytes_value,json=hexBytesValue,proto3,oneof"`
}

func (*MessageWithOneofScalars_DoubleValue) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_FloatValue) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Int32Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Int64Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Uint32Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Uint64Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Sint32Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Sint64Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Fixed32Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Fixed64Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Sfixed32Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_Sfixed64Value) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_BoolValue) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_StringValue) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_BytesValue) isMessageWithOneofScalars_Value() {}

func (*MessageWithOneofScalars_HexBytesValue) isMessageWithOneofScalars_Value() {}

type MessageWithScalarMaps struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StringDoubleMap   map[string]float64     `protobuf:"bytes,1,rep,name=string_double_map,json=stringDoubleMap,proto3" json:"string_double_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"` // map<double,string> is impossible.
	StringFloatMap    map[string]float32     `protobuf:"bytes,3,rep,name=string_float_map,json=stringFloatMap,proto3" json:"string_float_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`    // map<float,string> is impossible.
	StringInt32Map    map[string]int32       `protobuf:"bytes,5,rep,name=string_int32_map,json=stringInt32Map,proto3" json:"string_int32_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Int32StringMap    map[int32]string       `protobuf:"bytes,6,rep,name=int32_string_map,json=int32StringMap,proto3" json:"int32_string_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringInt64Map    map[string]int64       `protobuf:"bytes,7,rep,name=string_int64_map,json=stringInt64Map,proto3" json:"string_int64_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Int64StringMap    map[int64]string       `protobuf:"bytes,8,rep,name=int64_string_map,json=int64StringMap,proto3" json:"int64_string_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringUint32Map   map[string]uint32      `protobuf:"bytes,9,rep,name=string_uint32_map,json=stringUint32Map,proto3" json:"string_uint32_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Uint32StringMap   map[uint32]string      `protobuf:"bytes,10,rep,name=uint32_string_map,json=uint32StringMap,proto3" json:"uint32_string_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringUint64Map   map[string]uint64      `protobuf:"bytes,11,rep,name=string_uint64_map,json=stringUint64Map,proto3" json:"string_uint64_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Uint64StringMap   map[uint64]string      `protobuf:"bytes,12,rep,name=uint64_string_map,json=uint64StringMap,proto3" json:"uint64_string_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringSint32Map   map[string]int32       `protobuf:"bytes,13,rep,name=string_sint32_map,json=stringSint32Map,proto3" json:"string_sint32_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"zigzag32,2,opt,name=value"`
	Sint32StringMap   map[int32]string       `protobuf:"bytes,14,rep,name=sint32_string_map,json=sint32StringMap,proto3" json:"sint32_string_map,omitempty" protobuf_key:"zigzag32,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringSint64Map   map[string]int64       `protobuf:"bytes,15,rep,name=string_sint64_map,json=stringSint64Map,proto3" json:"string_sint64_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"zigzag64,2,opt,name=value"`
	Sint64StringMap   map[int64]string       `protobuf:"bytes,16,rep,name=sint64_string_map,json=sint64StringMap,proto3" json:"sint64_string_map,omitempty" protobuf_key:"zigzag64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringFixed32Map  map[string]uint32      `protobuf:"bytes,17,rep,name=string_fixed32_map,json=stringFixed32Map,proto3" json:"string_fixed32_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	Fixed32StringMap  map[uint32]string      `protobuf:"bytes,18,rep,name=fixed32_string_map,json=fixed32StringMap,proto3" json:"fixed32_string_map,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringFixed64Map  map[string]uint64      `protobuf:"bytes,19,rep,name=string_fixed64_map,json=stringFixed64Map,proto3" json:"string_fixed64_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Fixed64StringMap  map[uint64]string      `protobuf:"bytes,20,rep,name=fixed64_string_map,json=fixed64StringMap,proto3" json:"fixed64_string_map,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringSfixed32Map map[string]int32       `protobuf:"bytes,21,rep,name=string_sfixed32_map,json=stringSfixed32Map,proto3" json:"string_sfixed32_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	Sfixed32StringMap map[int32]string       `protobuf:"bytes,22,rep,name=sfixed32_string_map,json=sfixed32StringMap,proto3" json:"sfixed32_string_map,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringSfixed64Map map[string]int64       `protobuf:"bytes,23,rep,name=string_sfixed64_map,json=stringSfixed64Map,proto3" json:"string_sfixed64_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Sfixed64StringMap map[int64]string       `protobuf:"bytes,24,rep,name=sfixed64_string_map,json=sfixed64StringMap,proto3" json:"sfixed64_string_map,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringBoolMap     map[string]bool        `protobuf:"bytes,25,rep,name=string_bool_map,json=stringBoolMap,proto3" json:"string_bool_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	BoolStringMap     map[bool]string        `protobuf:"bytes,26,rep,name=bool_string_map,json=boolStringMap,proto3" json:"bool_string_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StringStringMap   map[string]string      `protobuf:"bytes,27,rep,name=string_string_map,json=stringStringMap,proto3" json:"string_string_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // map<string,string> is above.
	StringBytesMap    map[string][]byte      `protobuf:"bytes,29,rep,name=string_bytes_map,json=stringBytesMap,proto3" json:"string_bytes_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`    // map<bytes,string> is impossible.
	StringHexBytesMap map[string][]byte      `protobuf:"bytes,30,rep,name=string_hex_bytes_map,json=stringHexBytesMap,proto3" json:"string_hex_bytes_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MessageWithScalarMaps) Reset() {
	*x = MessageWithScalarMaps{}
	mi := &file_scalars_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithScalarMaps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithScalarMaps) ProtoMessage() {}

func (x *MessageWithScalarMaps) ProtoReflect() protoreflect.Message {
	mi := &file_scalars_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithScalarMaps.ProtoReflect.Descriptor instead.
func (*MessageWithScalarMaps) Descriptor() ([]byte, []int) {
	return file_scalars_proto_rawDescGZIP(), []int{2}
}

func (x *MessageWithScalarMaps) GetStringDoubleMap() map[string]float64 {
	if x != nil {
		return x.StringDoubleMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringFloatMap() map[string]float32 {
	if x != nil {
		return x.StringFloatMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringInt32Map() map[string]int32 {
	if x != nil {
		return x.StringInt32Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetInt32StringMap() map[int32]string {
	if x != nil {
		return x.Int32StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringInt64Map() map[string]int64 {
	if x != nil {
		return x.StringInt64Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetInt64StringMap() map[int64]string {
	if x != nil {
		return x.Int64StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringUint32Map() map[string]uint32 {
	if x != nil {
		return x.StringUint32Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetUint32StringMap() map[uint32]string {
	if x != nil {
		return x.Uint32StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringUint64Map() map[string]uint64 {
	if x != nil {
		return x.StringUint64Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetUint64StringMap() map[uint64]string {
	if x != nil {
		return x.Uint64StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringSint32Map() map[string]int32 {
	if x != nil {
		return x.StringSint32Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetSint32StringMap() map[int32]string {
	if x != nil {
		return x.Sint32StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringSint64Map() map[string]int64 {
	if x != nil {
		return x.StringSint64Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetSint64StringMap() map[int64]string {
	if x != nil {
		return x.Sint64StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringFixed32Map() map[string]uint32 {
	if x != nil {
		return x.StringFixed32Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetFixed32StringMap() map[uint32]string {
	if x != nil {
		return x.Fixed32StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringFixed64Map() map[string]uint64 {
	if x != nil {
		return x.StringFixed64Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetFixed64StringMap() map[uint64]string {
	if x != nil {
		return x.Fixed64StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringSfixed32Map() map[string]int32 {
	if x != nil {
		return x.StringSfixed32Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetSfixed32StringMap() map[int32]string {
	if x != nil {
		return x.Sfixed32StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringSfixed64Map() map[string]int64 {
	if x != nil {
		return x.StringSfixed64Map
	}
	return nil
}

func (x *MessageWithScalarMaps) GetSfixed64StringMap() map[int64]string {
	if x != nil {
		return x.Sfixed64StringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringBoolMap() map[string]bool {
	if x != nil {
		return x.StringBoolMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetBoolStringMap() map[bool]string {
	if x != nil {
		return x.BoolStringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringStringMap() map[string]string {
	if x != nil {
		return x.StringStringMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringBytesMap() map[string][]byte {
	if x != nil {
		return x.StringBytesMap
	}
	return nil
}

func (x *MessageWithScalarMaps) GetStringHexBytesMap() map[string][]byte {
	if x != nil {
		return x.StringHexBytesMap
	}
	return nil
}

var File_scalars_proto protoreflect.FileDescriptor

const file_scalars_proto_rawDesc = "" +
	"\n" +
	"\rscalars.proto\x12\x13thethings.json.test\x1a thethings/json/annotations.proto\"\xe2\v\n" +
	"\x12MessageWithScalars\x12!\n" +
	"\fdouble_value\x18\x01 \x01(\x01R\vdoubleValue\x12#\n" +
	"\rdouble_values\x18\x02 \x03(\x01R\fdoubleValues\x12\x1f\n" +
	"\vfloat_value\x18\x03 \x01(\x02R\n" +
	"floatValue\x12!\n" +
	"\ffloat_values\x18\x04 \x03(\x02R\vfloatValues\x12\x1f\n" +
	"\vint32_value\x18\x05 \x01(\x05R\n" +
	"int32Value\x12!\n" +
	"\fint32_values\x18\x06 \x03(\x05R\vint32Values\x12\x1f\n" +
	"\vint64_value\x18\a \x01(\x03R\n" +
	"int64Value\x12!\n" +
	"\fint64_values\x18\b \x03(\x03R\vint64Values\x12!\n" +
	"\fuint32_value\x18\t \x01(\rR\vuint32Value\x12#\n" +
	"\ruint32_values\x18\n" +
	" \x03(\rR\fuint32Values\x12!\n" +
	"\fuint64_value\x18\v \x01(\x04R\vuint64Value\x12#\n" +
	"\ruint64_values\x18\f \x03(\x04R\fuint64Values\x12!\n" +
	"\fsint32_value\x18\r \x01(\x11R\vsint32Value\x12#\n" +
	"\rsint32_values\x18\x0e \x03(\x11R\fsint32Values\x12!\n" +
	"\fsint64_value\x18\x0f \x01(\x12R\vsint64Value\x12#\n" +
	"\rsint64_values\x18\x10 \x03(\x12R\fsint64Values\x12#\n" +
	"\rfixed32_value\x18\x11 \x01(\aR\ffixed32Value\x12%\n" +
	"\x0efixed32_values\x18\x12 \x03(\aR\rfixed32Values\x12#\n" +
	"\rfixed64_value\x18\x13 \x01(\x06R\ffixed64Value\x12%\n" +
	"\x0efixed64_values\x18\x14 \x03(\x06R\rfixed64Values\x12%\n" +
	"\x0esfixed32_value\x18\x15 \x01(\x0fR\rsfixed32Value\x12'\n" +
	"\x0fsfixed32_values\x18\x16 \x03(\x0fR\x0esfixed32Values\x12%\n" +
	"\x0esfixed64_value\x18\x17 \x01(\x10R\rsfixed64Value\x12'\n" +
	"\x0fsfixed64_values\x18\x18 \x03(\x10R\x0esfixed64Values\x12\x1d\n" +
	"\n" +
	"bool_value\x18\x19 \x01(\bR\tboolValue\x12\x1f\n" +
	"\vbool_values\x18\x1a \x03(\bR\n" +
	"boolValues\x12!\n" +
	"\fstring_value\x18\x1b \x01(\tR\vstringValue\x12#\n" +
	"\rstring_values\x18\x1c \x03(\tR\fstringValues\x12\x1f\n" +
	"\vbytes_value\x18\x1d \x01(\fR\n" +
	"bytesValue\x12!\n" +
	"\fbytes_values\x18\x1e \x03(\fR\vbytesValues\x12\xc2\x01\n" +
	"\x0fhex_bytes_value\x18\x1f \x01(\fB\x99\x01\xea\xaa\x19\x94\x01\n" +
	"Ggithub.com/TheThingsIndustries/protoc-gen-go-json/test/types.MarshalHEX\x12Igithub.com/TheThingsIndustries/protoc-gen-go-json/test/types.UnmarshalHEXR\rhexBytesValue\x12\xce\x01\n" +
	"\x10hex_bytes_values\x18  \x03(\fB\xa3\x01\xea\xaa\x19\x9e\x01\n" +
	"Lgithub.com/TheThingsIndustries/protoc-gen-go-json/test/types.MarshalHEXArray\x12Ngithub.com/TheThingsIndustries/protoc-gen-go-json/test/types.UnmarshalHEXArrayR\x0ehexBytesValues\"\x94\x06\n" +
	"\x17MessageWithOneofScalars\x12#\n" +
	"\fdouble_value\x18\x01 \x01(\x01H\x00R\vdoubleValue\x12!\n" +
	"\vfloat_value\x18\x02 \x01(\x02H\x00R\n" +
	"floatValue\x12!\n" +
	"\vint32_value\x18\x03 \x01(\x05H\x00R\n" +
	"int32Value\x12!\n" +
	"\vint64_value\x18\x04 \x01(\x03H\x00R\n" +
	"int64Value\x12#\n" +
	"\fuint32_value\x18\x05 \x01(\rH\x00R\vuint32Value\x12#\n" +
	"\fuint64_value\x18\x06 \x01(\x04H\x00R\vuint64Value\x12#\n" +
	"\fsint32_value\x18\a \x01(\x11H\x00R\vsint32Value\x12#\n" +
	"\fsint64_value\x18\b \x01(\x12H\x00R\vsint64Value\x12%\n" +
	"\rfixed32_value\x18\t \x01(\aH\x00R\ffixed32Value\x12%\n" +
	"\rfixed64_value\x18\n" +
	" \x01(\x06H\x00R\ffixed64Value\x12'\n" +
	"\x0esfixed32_value\x18\v \x01(\x0fH\x00R\rsfixed32Value\x12'\n" +
	"\x0esfixed64_value\x18\f \x01(\x10H\x00R\rsfixed64Value\x12\x1f\n" +
	"\n" +
	"bool_value\x18\r \x01(\bH\x00R\tboolValue\x12#\n" +
	"\fstring_value\x18\x0e \x01(\tH\x00R\vstringValue\x12!\n" +
	"\vbytes_value\x18\x0f \x01(\fH\x00R\n" +
	"bytesValue\x12\xc4\x01\n" +
	"\x0fhex_bytes_value\x18\x10 \x01(\fB\x99\x01\xea\xaa\x19\x94\x01\n" +
	"Ggithub.com/TheThingsIndustries/protoc-gen-go-json/test/types.MarshalHEX\x12Igithub.com/TheThingsIndustries/protoc-gen-go-json/test/types.UnmarshalHEXH\x00R\rhexBytesValueB\a\n" +
	"\x05value\"\x82'\n" +
	"\x15MessageWithScalarMaps\x12k\n" +
	"\x11string_double_map\x18\x01 \x03(\v2?.thethings.json.test.MessageWithScalarMaps.StringDoubleMapEntryR\x0fstringDoubleMap\x12h\n" +
	"\x10string_float_map\x18\x03 \x03(\v2>.thethings.json.test.MessageWithScalarMaps.StringFloatMapEntryR\x0estringFloatMap\x12h\n" +
	"\x10string_int32_map\x18\x05 \x03(\v2>.thethings.json.test.MessageWithScalarMaps.StringInt32MapEntryR\x0estringInt32Map\x12h\n" +
	"\x10int32_string_map\x18\x06 \x03(\v2>.thethings.json.test.MessageWithScalarMaps.Int32StringMapEntryR\x0eint32StringMap\x12h\n" +
	"\x10string_int64_map\x18\a \x03(\v2>.thethings.json.test.MessageWithScalarMaps.StringInt64MapEntryR\x0estringInt64Map\x12h\n" +
	"\x10int64_string_map\x18\b \x03(\v2>.thethings.json.test.MessageWithScalarMaps.Int64StringMapEntryR\x0eint64StringMap\x12k\n" +
	"\x11string_uint32_map\x18\t \x03(\v2?.thethings.json.test.MessageWithScalarMaps.StringUint32MapEntryR\x0fstringUint32Map\x12k\n" +
	"\x11uint32_string_map\x18\n" +
	" \x03(\v2?.thethings.json.test.MessageWithScalarMaps.Uint32StringMapEntryR\x0fuint32StringMap\x12k\n" +
	"\x11string_uint64_map\x18\v \x03(\v2?.thethings.json.test.MessageWithScalarMaps.StringUint64MapEntryR\x0fstringUint64Map\x12k\n" +
	"\x11uint64_string_map\x18\f \x03(\v2?.thethings.json.test.MessageWithScalarMaps.Uint64StringMapEntryR\x0fuint64StringMap\x12k\n" +
	"\x11string_sint32_map\x18\r \x03(\v2?.thethings.json.test.MessageWithScalarMaps.StringSint32MapEntryR\x0fstringSint32Map\x12k\n" +
	"\x11sint32_string_map\x18\x0e \x03(\v2?.thethings.json.test.MessageWithScalarMaps.Sint32StringMapEntryR\x0fsint32StringMap\x12k\n" +
	"\x11string_sint64_map\x18\x0f \x03(\v2?.thethings.json.test.MessageWithScalarMaps.StringSint64MapEntryR\x0fstringSint64Map\x12k\n" +
	"\x11sint64_string_map\x18\x10 \x03(\v2?.thethings.json.test.MessageWithScalarMaps.Sint64StringMapEntryR\x0fsint64StringMap\x12n\n" +
	"\x12string_fixed32_map\x18\x11 \x03(\v2@.thethings.json.test.MessageWithScalarMaps.StringFixed32MapEntryR\x10stringFixed32Map\x12n\n" +
	"\x12fixed32_string_map\x18\x12 \x03(\v2@.thethings.json.test.MessageWithScalarMaps.Fixed32StringMapEntryR\x10fixed32StringMap\x12n\n" +
	"\x12string_fixed64_map\x18\x13 \x03(\v2@.thethings.json.test.MessageWithScalarMaps.StringFixed64MapEntryR\x10stringFixed64Map\x12n\n" +
	"\x12fixed64_string_map\x18\x14 \x03(\v2@.thethings.json.test.MessageWithScalarMaps.Fixed64StringMapEntryR\x10fixed64StringMap\x12q\n" +
	"\x13string_sfixed32_map\x18\x15 \x03(\v2A.thethings.json.test.MessageWithScalarMaps.StringSfixed32MapEntryR\x11stringSfixed32Map\x12q\n" +
	"\x13sfixed32_string_map\x18\x16 \x03(\v2A.thethings.json.test.MessageWithScalarMaps.Sfixed32StringMapEntryR\x11sfixed32StringMap\x12q\n" +
	"\x13string_sfixed64_map\x18\x17 \x03(\v2A.thethings.json.test.MessageWithScalarMaps.StringSfixed64MapEntryR\x11stringSfixed64Map\x12q\n" +
	"\x13sfixed64_string_map\x18\x18 \x03(\v2A.thethings.json.test.MessageWithScalarMaps.Sfixed64StringMapEntryR\x11sfixed64StringMap\x12e\n" +
	"\x0fstring_bool_map\x18\x19 \x03(\v2=.thethings.json.test.MessageWithScalarMaps.StringBoolMapEntryR\rstringBoolMap\x12e\n" +
	"\x0fbool_string_map\x18\x1a \x03(\v2=.thethings.json.test.MessageWithScalarMaps.BoolStringMapEntryR\rboolStringMap\x12k\n" +
	"\x11string_string_map\x18\x1b \x03(\v2?.thethings.json.test.MessageWithScalarMaps.StringStringMapEntryR\x0fstringStringMap\x12h\n" +
	"\x10string_bytes_map\x18\x1d \x03(\v2>.thethings.json.test.MessageWithScalarMaps.StringBytesMapEntryR\x0estringBytesMap\x12\xa0\x02\n" +
	"\x14string_hex_bytes_map\x18\x1e \x03(\v2A.thethings.json.test.MessageWithScalarMaps.StringHexBytesMapEntryB\xab\x01\xea\xaa\x19\xa6\x01\n" +
	"Pgithub.com/TheThingsIndustries/protoc-gen-go-json/test/types.MarshalStringHEXMap\x12Rgithub.com/TheThingsIndustries/protoc-gen-go-json/test/types.UnmarshalStringHEXMapR\x11stringHexBytesMap\x1aB\n" +
	"\x14StringDoubleMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1aA\n" +
	"\x13StringFloatMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1aA\n" +
	"\x13StringInt32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aA\n" +
	"\x13Int32StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13StringInt64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aA\n" +
	"\x13Int64StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14StringUint32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1aB\n" +
	"\x14Uint32StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14StringUint64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\x1aB\n" +
	"\x14Uint64StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14StringSint32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x11R\x05value:\x028\x01\x1aB\n" +
	"\x14Sint32StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x11R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14StringSint64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x12R\x05value:\x028\x01\x1aB\n" +
	"\x14Sint64StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x12R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aC\n" +
	"\x15StringFixed32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\aR\x05value:\x028\x01\x1aC\n" +
	"\x15Fixed32StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\aR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aC\n" +
	"\x15StringFixed64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x06R\x05value:\x028\x01\x1aC\n" +
	"\x15Fixed64StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x06R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16StringSfixed32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x0fR\x05value:\x028\x01\x1aD\n" +
	"\x16Sfixed32StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x0fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16StringSfixed64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x10R\x05value:\x028\x01\x1aD\n" +
	"\x16Sfixed64StringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x10R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a@\n" +
	"\x12StringBoolMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a@\n" +
	"\x12BoolStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\bR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14StringStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13StringBytesMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aD\n" +
	"\x16StringHexBytesMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01B@\xea\xaa\x19\x04\b\x01\x10\x01Z6github.com/TheThingsIndustries/protoc-gen-go-json/testb\x06proto3"

var (
	file_scalars_proto_rawDescOnce sync.Once
	file_scalars_proto_rawDescData []byte
)

func file_scalars_proto_rawDescGZIP() []byte {
	file_scalars_proto_rawDescOnce.Do(func() {
		file_scalars_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scalars_proto_rawDesc), len(file_scalars_proto_rawDesc)))
	})
	return file_scalars_proto_rawDescData
}

var file_scalars_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_scalars_proto_goTypes = []any{
	(*MessageWithScalars)(nil),      // 0: thethings.json.test.MessageWithScalars
	(*MessageWithOneofScalars)(nil), // 1: thethings.json.test.MessageWithOneofScalars
	(*MessageWithScalarMaps)(nil),   // 2: thethings.json.test.MessageWithScalarMaps
	nil,                             // 3: thethings.json.test.MessageWithScalarMaps.StringDoubleMapEntry
	nil,                             // 4: thethings.json.test.MessageWithScalarMaps.StringFloatMapEntry
	nil,                             // 5: thethings.json.test.MessageWithScalarMaps.StringInt32MapEntry
	nil,                             // 6: thethings.json.test.MessageWithScalarMaps.Int32StringMapEntry
	nil,                             // 7: thethings.json.test.MessageWithScalarMaps.StringInt64MapEntry
	nil,                             // 8: thethings.json.test.MessageWithScalarMaps.Int64StringMapEntry
	nil,                             // 9: thethings.json.test.MessageWithScalarMaps.StringUint32MapEntry
	nil,                             // 10: thethings.json.test.MessageWithScalarMaps.Uint32StringMapEntry
	nil,                             // 11: thethings.json.test.MessageWithScalarMaps.StringUint64MapEntry
	nil,                             // 12: thethings.json.test.MessageWithScalarMaps.Uint64StringMapEntry
	nil,                             // 13: thethings.json.test.MessageWithScalarMaps.StringSint32MapEntry
	nil,                             // 14: thethings.json.test.MessageWithScalarMaps.Sint32StringMapEntry
	nil,                             // 15: thethings.json.test.MessageWithScalarMaps.StringSint64MapEntry
	nil,                             // 16: thethings.json.test.MessageWithScalarMaps.Sint64StringMapEntry
	nil,                             // 17: thethings.json.test.MessageWithScalarMaps.StringFixed32MapEntry
	nil,                             // 18: thethings.json.test.MessageWithScalarMaps.Fixed32StringMapEntry
	nil,                             // 19: thethings.json.test.MessageWithScalarMaps.StringFixed64MapEntry
	nil,                             // 20: thethings.json.test.MessageWithScalarMaps.Fixed64StringMapEntry
	nil,                             // 21: thethings.json.test.MessageWithScalarMaps.StringSfixed32MapEntry
	nil,                             // 22: thethings.json.test.MessageWithScalarMaps.Sfixed32StringMapEntry
	nil,                             // 23: thethings.json.test.MessageWithScalarMaps.StringSfixed64MapEntry
	nil,                             // 24: thethings.json.test.MessageWithScalarMaps.Sfixed64StringMapEntry
	nil,                             // 25: thethings.json.test.MessageWithScalarMaps.StringBoolMapEntry
	nil,                             // 26: thethings.json.test.MessageWithScalarMaps.BoolStringMapEntry
	nil,                             // 27: thethings.json.test.MessageWithScalarMaps.StringStringMapEntry
	nil,                             // 28: thethings.json.test.MessageWithScalarMaps.StringBytesMapEntry
	nil,                             // 29: thethings.json.test.MessageWithScalarMaps.StringHexBytesMapEntry
}
var file_scalars_proto_depIdxs = []int32{
	3,  // 0: thethings.json.test.MessageWithScalarMaps.string_double_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringDoubleMapEntry
	4,  // 1: thethings.json.test.MessageWithScalarMaps.string_float_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringFloatMapEntry
	5,  // 2: thethings.json.test.MessageWithScalarMaps.string_int32_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringInt32MapEntry
	6,  // 3: thethings.json.test.MessageWithScalarMaps.int32_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Int32StringMapEntry
	7,  // 4: thethings.json.test.MessageWithScalarMaps.string_int64_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringInt64MapEntry
	8,  // 5: thethings.json.test.MessageWithScalarMaps.int64_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Int64StringMapEntry
	9,  // 6: thethings.json.test.MessageWithScalarMaps.string_uint32_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringUint32MapEntry
	10, // 7: thethings.json.test.MessageWithScalarMaps.uint32_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Uint32StringMapEntry
	11, // 8: thethings.json.test.MessageWithScalarMaps.string_uint64_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringUint64MapEntry
	12, // 9: thethings.json.test.MessageWithScalarMaps.uint64_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Uint64StringMapEntry
	13, // 10: thethings.json.test.MessageWithScalarMaps.string_sint32_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringSint32MapEntry
	14, // 11: thethings.json.test.MessageWithScalarMaps.sint32_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Sint32StringMapEntry
	15, // 12: thethings.json.test.MessageWithScalarMaps.string_sint64_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringSint64MapEntry
	16, // 13: thethings.json.test.MessageWithScalarMaps.sint64_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Sint64StringMapEntry
	17, // 14: thethings.json.test.MessageWithScalarMaps.string_fixed32_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringFixed32MapEntry
	18, // 15: thethings.json.test.MessageWithScalarMaps.fixed32_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Fixed32StringMapEntry
	19, // 16: thethings.json.test.MessageWithScalarMaps.string_fixed64_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringFixed64MapEntry
	20, // 17: thethings.json.test.MessageWithScalarMaps.fixed64_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Fixed64StringMapEntry
	21, // 18: thethings.json.test.MessageWithScalarMaps.string_sfixed32_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringSfixed32MapEntry
	22, // 19: thethings.json.test.MessageWithScalarMaps.sfixed32_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Sfixed32StringMapEntry
	23, // 20: thethings.json.test.MessageWithScalarMaps.string_sfixed64_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringSfixed64MapEntry
	24, // 21: thethings.json.test.MessageWithScalarMaps.sfixed64_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.Sfixed64StringMapEntry
	25, // 22: thethings.json.test.MessageWithScalarMaps.string_bool_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringBoolMapEntry
	26, // 23: thethings.json.test.MessageWithScalarMaps.bool_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.BoolStringMapEntry
	27, // 24: thethings.json.test.MessageWithScalarMaps.string_string_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringStringMapEntry
	28, // 25: thethings.json.test.MessageWithScalarMaps.string_bytes_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringBytesMapEntry
	29, // 26: thethings.json.test.MessageWithScalarMaps.string_hex_bytes_map:type_name -> thethings.json.test.MessageWithScalarMaps.StringHexBytesMapEntry
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_scalars_proto_init() }
func file_scalars_proto_init() {
	if File_scalars_proto != nil {
		return
	}
	file_scalars_proto_msgTypes[1].OneofWrappers = []any{
		(*MessageWithOneofScalars_DoubleValue)(nil),
		(*MessageWithOneofScalars_FloatValue)(nil),
		(*MessageWithOneofScalars_Int32Value)(nil),
		(*MessageWithOneofScalars_Int64Value)(nil),
		(*MessageWithOneofScalars_Uint32Value)(nil),
		(*MessageWithOneofScalars_Uint64Value)(nil),
		(*MessageWithOneofScalars_Sint32Value)(nil),
		(*MessageWithOneofScalars_Sint64Value)(nil),
		(*MessageWithOneofScalars_Fixed32Value)(nil),
		(*MessageWithOneofScalars_Fixed64Value)(nil),
		(*MessageWithOneofScalars_Sfixed32Value)(nil),
		(*MessageWithOneofScalars_Sfixed64Value)(nil),
		(*MessageWithOneofScalars_BoolValue)(nil),
		(*MessageWithOneofScalars_StringValue)(nil),
		(*MessageWithOneofScalars_BytesValue)(nil),
		(*MessageWithOneofScalars_HexBytesValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scalars_proto_rawDesc), len(file_scalars_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scalars_proto_goTypes,
		DependencyIndexes: file_scalars_proto_depIdxs,
		MessageInfos:      file_scalars_proto_msgTypes,
	}.Build()
	File_scalars_proto = out.File
	file_scalars_proto_goTypes = nil
	file_scalars_proto_depIdxs = nil
}
